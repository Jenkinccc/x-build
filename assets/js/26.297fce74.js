(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{377:function(t,a,s){"use strict";s.r(a);var e=s(26),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"css-规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-规范"}},[t._v("#")]),t._v(" CSS 规范")]),t._v(" "),s("h2",{attrs:{id:"降低选择器复杂性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#降低选择器复杂性"}},[t._v("#")]),t._v(" 降低选择器复杂性")]),t._v(" "),s("p",[t._v("浏览器读取选择器，遵循的原则是从选择器的右边到左边读取。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#block .text p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("查找所有 P 元素。")]),t._v(" "),s("li",[t._v("查找结果 1 中的元素是否有类名为 text 的父元素")]),t._v(" "),s("li",[t._v("查找结果 2 中的元素是否有 id 为 block 的父元素")])]),t._v(" "),s("h2",{attrs:{id:"选择器优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择器优先级"}},[t._v("#")]),t._v(" 选择器优先级")]),t._v(" "),s("blockquote",[s("p",[t._v("内联 > ID选择器 > 类选择器 > 标签选择器")])]),t._v(" "),s("ul",[s("li",[t._v("选择器越短越好。")]),t._v(" "),s("li",[t._v("尽量使用高优先级的选择器，例如 ID 和类选择器。")]),t._v(" "),s("li",[t._v("避免使用通配符 *。")])]),t._v(" "),s("h2",{attrs:{id:"使用-flexbox"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-flexbox"}},[t._v("#")]),t._v(" 使用 flexbox")]),t._v(" "),s("p",[t._v("在早期的 CSS 布局方式中我们能对元素实行绝对定位、相对定位或浮动定位。而现在，我们有了新的布局方式 flexbox，它比起早期的布局方式来说有个优势，那就是性能比较好。不过 flexbox 兼容性还是有点问题，不是所有浏览器都支持它，所以要谨慎使用。\n各浏览器兼容性：")]),t._v(" "),s("ul",[s("li",[t._v("Chrome 29+")]),t._v(" "),s("li",[t._v("Firefox 28+")]),t._v(" "),s("li",[t._v("Internet Explorer 11")]),t._v(" "),s("li",[t._v("Opera 17+")]),t._v(" "),s("li",[t._v("Safari 6.1+ (prefixed with -webkit-)")]),t._v(" "),s("li",[t._v("Android 4.4+")]),t._v(" "),s("li",[t._v("iOS 7.1+ (prefixed with -webkit-)")])]),t._v(" "),s("h2",{attrs:{id:"动画性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动画性能优化"}},[t._v("#")]),t._v(" 动画性能优化")]),t._v(" "),s("p",[t._v("在 CSS 中，transforms 和 opacity 这两个属性更改不会触发重排与重绘，它们是可以由合成器（composite）单独处理的属性。")]),t._v(" "),s("h2",{attrs:{id:"属性值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性值"}},[t._v("#")]),t._v(" 属性值")]),t._v(" "),s("ul",[s("li",[t._v("当数值为 0 - 1 之间的小数时，建议省略整数部分的 0。")]),t._v(" "),s("li",[t._v("当长度为 0 时建议省略单位。")]),t._v(" "),s("li",[t._v("建议不使用命名色值。")]),t._v(" "),s("li",[t._v("建议当元素需要撑起高度以包含内部的浮动元素时，通过对伪类设置 clear 或触发 BFC 的方式进行 clearfix。尽量不使用增加空标签的方式。")]),t._v(" "),s("li",[t._v("除公共样式之外，在业务代码中尽量不能使用 !important。")]),t._v(" "),s("li",[t._v("建议将 z-index 进行分层，对文档流外绝对定位元素的视觉层级关系进行管理。")])]),t._v(" "),s("h2",{attrs:{id:"字体排版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字体排版"}},[t._v("#")]),t._v(" 字体排版")]),t._v(" "),s("ul",[s("li",[t._v("字号应不小于 12px（PC端）。")]),t._v(" "),s("li",[t._v("font-weight 属性建议使用数值方式描述。")]),t._v(" "),s("li",[t._v("line-height 在定义文本段落时，应使用数值。")])])])}),[],!1,null,null,null);a.default=v.exports}}]);