(self.webpackChunk=self.webpackChunk||[]).push([[2073],{76855:function(n,s,a){"use strict";a.r(s),a.d(s,{data:function(){return e}});const e={key:"v-00396924",path:"/Guide/Basics/Theme.html",title:"更换主题",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"主题色",slug:"主题色",children:[{level:3,title:"主题定制",slug:"主题定制",children:[]},{level:3,title:"样式覆盖",slug:"样式覆盖",children:[]},{level:3,title:"动态更换主题色",slug:"动态更换主题色",children:[]}]},{level:2,title:"深/浅模式",slug:"深-浅模式",children:[{level:3,title:"颜色变量",slug:"颜色变量",children:[]},{level:3,title:"mixin函数",slug:"mixin函数",children:[]}]}],filePathRelative:"Guide/Basics/Theme.md",git:{updatedTime:1624865896e3,contributors:[]}}},67379:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return T}});var e=a(66252);const t=(0,e.uE)('<h1 id="更换主题" tabindex="-1"><a class="header-anchor" href="#更换主题" aria-hidden="true">#</a> 更换主题</h1><p>主题风格分为两个部分：主题色 + 深/浅模式。</p><h2 id="主题色" tabindex="-1"><a class="header-anchor" href="#主题色" aria-hidden="true">#</a> 主题色</h2><h3 id="主题定制" tabindex="-1"><a class="header-anchor" href="#主题定制" aria-hidden="true">#</a> 主题定制</h3><p>可以通过 <code>@/styles/antdTheme.js</code> 定义 modifyVars，完全支持官方提供的 less 变量定制功能：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string">&#39;primary-color&#39;</span><span class="token operator">:</span> <span class="token string">&#39;#F5222D&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;link-color&#39;</span><span class="token operator">:</span> <span class="token string">&#39;#F5222D&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;border-radius-base&#39;</span><span class="token operator">:</span> <span class="token string">&#39;4px&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>当修改完毕后，重启环境，即可生效。</p>',7),p=(0,e.Uk)("参考"),r={href:"https://www.antdv.com/docs/vue/customize-theme-cn/",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("定制主题"),c=(0,e.Uk)("。"),o=(0,e.Wm)("h3",{id:"样式覆盖",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#样式覆盖","aria-hidden":"true"},"#"),(0,e.Uk)(" 样式覆盖")],-1),i=(0,e.Uk)("Ant Design Vue 的通用样式变量可能无法满足所有定制需求，你需要全局覆盖默认的组件样式。我们可以参照 "),u={href:"/Guide/Basics/Style",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("样式"),k=(0,e.Uk)(" 章节来覆盖样式。"),m=(0,e.Wm)("h3",{id:"动态更换主题色",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#动态更换主题色","aria-hidden":"true"},"#"),(0,e.Uk)(" 动态更换主题色")],-1),h=(0,e.Uk)("脚手架已经内置动态更换主题色的功能，通过 Vuex 来管理，并且内置了多种主题色。具体使用参考"),b={href:"/Vuex/Theme",target:"_blank",rel:"noopener noreferrer"},g=(0,e.Uk)("状态管理 - 切换主题颜色"),f=(0,e.Uk)("。"),v=(0,e.Wm)("h2",{id:"深-浅模式",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#深-浅模式","aria-hidden":"true"},"#"),(0,e.Uk)(" 深/浅模式")],-1),x=(0,e.Wm)("h3",{id:"颜色变量",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#颜色变量","aria-hidden":"true"},"#"),(0,e.Uk)(" 颜色变量")],-1),W=(0,e.Uk)("根据设计搞主题颜色定义变量颜色，并使用"),U={href:"/Vuex/Theme",target:"_blank",rel:"noopener noreferrer"},y=(0,e.Uk)("状态管理 - 切换主题颜色"),F=(0,e.Uk)("切换主题。"),w=(0,e.uE)('<p><code>src/style/theme.scss</code></p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token property"><span class="token variable">$themes</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n  <span class="token comment">// 浅色系</span>\n  <span class="token property">light</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n    <span class="token property">font-color</span><span class="token punctuation">:</span> #051724<span class="token punctuation">,</span> <span class="token comment">// 正文</span>\n    <span class="token property">notes-color</span><span class="token punctuation">:</span> #666<span class="token punctuation">,</span> <span class="token comment">// 注释</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #FFFFFF<span class="token punctuation">,</span> <span class="token comment">// 背景色</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// 深色系</span>\n  <span class="token property">dark</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n    <span class="token property">font-color</span><span class="token punctuation">:</span> #FFFFFF<span class="token punctuation">,</span>\n    <span class="token property">notes-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">,</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #1b2531<span class="token punctuation">,</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="mixin函数" tabindex="-1"><a class="header-anchor" href="#mixin函数" aria-hidden="true">#</a> mixin函数</h3><ul><li><strong>@include fontColor(&#39;定义的主题色变量&#39;)</strong> <code>获取字体颜色</code></li><li><strong>@include backgroundColor(&#39;定义的主题色变量&#39;)</strong> <code>获取背景颜色</code></li></ul>',4);var T={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("p",null,[p,(0,e.Wm)("a",r,[l,(0,e.Wm)(a)]),c]),o,(0,e.Wm)("p",null,[i,(0,e.Wm)("a",u,[d,(0,e.Wm)(a)]),k]),m,(0,e.Wm)("p",null,[h,(0,e.Wm)("a",b,[g,(0,e.Wm)(a)]),f]),v,x,(0,e.Wm)("p",null,[W,(0,e.Wm)("a",U,[y,(0,e.Wm)(a)]),F]),w],64)}}}}]);