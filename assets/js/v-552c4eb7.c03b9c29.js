(self.webpackChunk=self.webpackChunk||[]).push([[6494],{1242:function(s,n,a){"use strict";a.r(n),a.d(n,{data:function(){return e}});const e={key:"v-552c4eb7",path:"/guide/ui/style.html",title:"样式",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Sass/Scss",slug:"sass-scss",children:[]},{level:2,title:"全局污染",slug:"全局污染",children:[{level:3,title:"允许的全局样式",slug:"允许的全局样式",children:[]},{level:3,title:"局部样式",slug:"局部样式",children:[]}]},{level:2,title:"体验优化",slug:"体验优化",children:[]},{level:2,title:"覆盖组件库样式",slug:"覆盖组件库样式",children:[]},{level:2,title:"移动端 100vh 问题",slug:"移动端-100vh-问题",children:[{level:3,title:"解决方案",slug:"解决方案",children:[]},{level:3,title:"使用 Mixins",slug:"使用-mixins",children:[]},{level:3,title:"在 SCSS 中直接使用",slug:"在-scss-中直接使用",children:[]}]},{level:2,title:"自适应",slug:"自适应",children:[{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"用法",slug:"用法",children:[]}]}],filePathRelative:"guide/ui/style.md",git:{updatedTime:1624843875e3,contributors:[]}}},2080:function(s,n,a){"use strict";a.r(n),a.d(n,{default:function(){return y}});var e=a(6252);const p=(0,e.Wm)("h1",{id:"样式",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#样式","aria-hidden":"true"},"#"),(0,e.Uk)(" 样式")],-1),t=(0,e.Wm)("h2",{id:"sass-scss",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#sass-scss","aria-hidden":"true"},"#"),(0,e.Uk)(" Sass/Scss")],-1),l=(0,e.Uk)("默认使用 Scss 作为样式开发的样式语言，查看"),c={href:"https://www.html.cn/doc/sass/",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("Scss文档"),i=(0,e.Uk)("。"),r=(0,e.uE)('<blockquote><p>Sass 是一个 CSS 的扩展，它在 CSS 语法的基础上，允许您使用变量 (variables), 嵌套规则 (nested rules), 混合 (mixins), 导入 (inline imports) 等功能，令 CSS 更加强大与优雅。使用 Sass 以及 Compass 样式库 有助于更好地组织管理样式文件，以及更高效地开发项目。</p></blockquote><h2 id="全局污染" tabindex="-1"><a class="header-anchor" href="#全局污染" aria-hidden="true">#</a> 全局污染</h2><h3 id="允许的全局样式" tabindex="-1"><a class="header-anchor" href="#允许的全局样式" aria-hidden="true">#</a> 允许的全局样式</h3><p>全局样式 目录：<code>@/styles</code></p><ul><li>global.scss: 全局样式</li><li>mixins.scss: 全局 Mixins 管理</li><li>variable.scss: 全局变量管理</li></ul><h3 id="局部样式" tabindex="-1"><a class="header-anchor" href="#局部样式" aria-hidden="true">#</a> 局部样式</h3><p>尽量保证使用 scoped 局部样式方案。</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n  ...\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="体验优化" tabindex="-1"><a class="header-anchor" href="#体验优化" aria-hidden="true">#</a> 体验优化</h2>',9),u=(0,e.Uk)("✅ 页面载入进度条("),d={href:"https://github.com/rstacruz/nprogress",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("nprogress@0.2.0"),k=(0,e.Uk)(")"),b=(0,e.Wm)("li",null,"✅ 美化滚动条",-1),m=(0,e.Wm)("li",null,"✅ 静态资源加载页面（减少白屏等待时间）",-1),g=(0,e.uE)('<h2 id="覆盖组件库样式" tabindex="-1"><a class="header-anchor" href="#覆盖组件库样式" aria-hidden="true">#</a> 覆盖组件库样式</h2><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>暂无文档</p></div><h2 id="移动端-100vh-问题" tabindex="-1"><a class="header-anchor" href="#移动端-100vh-问题" aria-hidden="true">#</a> 移动端 100vh 问题</h2><p>在发现在移动端的 Chrome、safari 浏览器中，因为浏览器栏和一些导航栏、链接栏导致不一样的呈现。</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h3><p>使用 vh-check：</p><p>在 <code>main.js</code> 引入 <code>@/styles/vh-check.js</code>;</p><h3 id="使用-mixins" tabindex="-1"><a class="header-anchor" href="#使用-mixins" aria-hidden="true">#</a> 使用 Mixins</h3>',8),v=(0,e.Uk)("在需要设置高度的时候使用 "),x={href:"/Css/Mixins",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("@include vh"),S=(0,e.Uk)("。"),w=(0,e.uE)('<div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token keyword">@include</span> vh<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="在-scss-中直接使用" tabindex="-1"><a class="header-anchor" href="#在-scss-中直接使用" aria-hidden="true">#</a> 在 SCSS 中直接使用</h3><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token property"><span class="token variable">$height</span></span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>\n<span class="token property">height</span><span class="token punctuation">:</span> <span class="token variable">$height</span><span class="token punctuation">;</span>\n<span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token variable">#{$height}</span> <span class="token operator">-</span> <span class="token function">var</span><span class="token punctuation">(</span>--browser-address-bar<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="自适应" tabindex="-1"><a class="header-anchor" href="#自适应" aria-hidden="true">#</a> 自适应</h2><p>根据视窗大小进行变化，达到自适应效果。</p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install postcss<span class="token operator">-</span>px<span class="token operator">-</span>to<span class="token operator">-</span>viewport <span class="token operator">--</span>save<span class="token operator">-</span>dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h3><p>vue.config.ts</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> pxtoviewport <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;postcss-px-to-viewport&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n   css<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loaderOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n      postcss<span class="token operator">:</span> <span class="token punctuation">{</span>\n        plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token function">pxtoviewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token comment">// 配置视窗口尺寸</span>\n            unitToConvert<span class="token operator">:</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span> \n            viewportWidth<span class="token operator">:</span> <span class="token number">1920</span><span class="token punctuation">,</span>\n            unitPrecision<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n            viewportUnit<span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span>\n            fontViewportUnit<span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 字体使用的视口单位</span>\n            selectorBlackList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tab-bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tab-bar-item&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            minPixelValue<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            mediaQuery<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            landscapeUnit<span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 横屏时使用的单位</span>\n            landscapeWidth<span class="token operator">:</span> <span class="token number">568</span> <span class="token comment">// 横屏时使用的视口宽度</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ul><li>unitToConvert <code>String 要转换的单位，默认px</code></li><li>viewportWidth <code>Numbwe 视口的宽度 (设计稿大小)</code></li><li>unitPrecision <code>Number 转换后的精度，即小数点位数</code></li><li>viewportUnit <code>String 希望使用的视口单位</code></li><li>fontViewportUnit <code>String 体需要转换成的视窗单位，默认vw</code></li><li>selectorBlackList <code>Array 要忽略的选择器，保留为px</code><ul><li>值是String：检查选择器是否包含字符串 <code>例如：[&#39;body&#39;] 将匹配 .body-class</code></li><li>值是regexp，将检查选择器是否匹配regexp <code>例如：[/^body$/]将匹配body但不匹配.body</code></li></ul></li><li>minPixelValue <code>Number 设置要替换的最小像素值</code></li><li>mediaQuery <code>Boolean 是否允许在媒体查询中转换px</code></li><li>replace <code>Boolean 换包含vw的规则，而不添加后备广告</code></li><li>exclude <code>Array or Regexp 忽略某些文件</code><ul><li>值为regexp：将忽略匹配文件，例如“node_modules”。</li><li>值是array：则数组的元素为regexp。</li></ul></li><li>landscape <code>Boolean 是否处理横屏情况</code></li><li>landscapeUnit <code>String landscape选项的预期单位</code></li><li>landscapeWidth <code>Number 用于横向方向的视口宽度</code></li></ul>',11);var y={render:function(s,n){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,t,(0,e.Wm)("p",null,[l,(0,e.Wm)("a",c,[o,(0,e.Wm)(a)]),i]),r,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[u,(0,e.Wm)("a",d,[h,(0,e.Wm)(a)]),k]),b,m]),g,(0,e.Wm)("p",null,[v,(0,e.Wm)("a",x,[f,(0,e.Wm)(a)]),S]),w],64)}}}}]);