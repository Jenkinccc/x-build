(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{382:function(t,a,s){"use strict";s.r(a);var v=s(26),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"测试规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试规范"}},[t._v("#")]),t._v(" 测试规范")]),t._v(" "),s("h2",{attrs:{id:"单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[t._v("#")]),t._v(" 单元测试")]),t._v(" "),s("ul",[s("li",[t._v("所有写单元测试的文件名必须是 "),s("code",[t._v("***.spec.js")]),t._v(" 的格式。")]),t._v(" "),s("li",[t._v("所有的测试用例应确保最大化的覆盖率。")])]),t._v(" "),s("h2",{attrs:{id:"组件测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件测试"}},[t._v("#")]),t._v(" 组件测试")]),t._v(" "),s("p",[t._v("组件测试不强制要求写测试用例，因为组件测试用例写起来难度较大，更不需要追求 100% 覆盖率，量力而为。")]),t._v(" "),s("h2",{attrs:{id:"交互测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交互测试"}},[t._v("#")]),t._v(" 交互测试")]),t._v(" "),s("p",[t._v("测试项目各类交互逻辑是否符合预期，交互体验是否符合要求。")]),t._v(" "),s("h2",{attrs:{id:"接口调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口调试"}},[t._v("#")]),t._v(" 接口调试")]),t._v(" "),s("ul",[s("li",[t._v("接口参数、格式与返回内容是否符合预期。")]),t._v(" "),s("li",[t._v("业务对接口的调用，以及对返回的内容的解析和使用逻辑是否正常。")]),t._v(" "),s("li",[t._v("区分开发环境与生产环境的API 接口地址。")])]),t._v(" "),s("h2",{attrs:{id:"bug-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bug-测试"}},[t._v("#")]),t._v(" BUG 测试")]),t._v(" "),s("ul",[s("li",[t._v("显示逻辑和交互逻辑是否存在bug。")]),t._v(" "),s("li",[t._v("代码语法逻辑是否存在bug。")]),t._v(" "),s("li",[t._v("模块、组件逻辑是否存在bug。")]),t._v(" "),s("li",[t._v("错误处理是否恰当，是否有所遗漏。")])])])}),[],!1,null,null,null);a.default=_.exports}}]);