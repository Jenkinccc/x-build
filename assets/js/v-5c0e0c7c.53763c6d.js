(self.webpackChunk=self.webpackChunk||[]).push([[5551],{72315:function(n,a,s){"use strict";s.r(a),s.d(a,{data:function(){return e}});const e={key:"v-5c0e0c7c",path:"/Guide/Basics/BuildOptimization.html",title:"构建优化",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"使用包分析工具",slug:"使用包分析工具",children:[]},{level:2,title:"moment",slug:"moment",children:[]},{level:2,title:"@ant-design/icons",slug:"ant-design-icons",children:[]},{level:2,title:"gzip",slug:"gzip",children:[]},{level:2,title:"路由懒加载",slug:"路由懒加载",children:[]},{level:2,title:"Preload",slug:"preload",children:[]},{level:2,title:"Prefetch",slug:"prefetch",children:[]}],filePathRelative:"Guide/Basics/BuildOptimization.md",git:{updatedTime:1624865896e3,contributors:[]}}},30559:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return P}});var e=s(66252);const p=(0,e.Wm)("h1",{id:"构建优化",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#构建优化","aria-hidden":"true"},"#"),(0,e.Uk)(" 构建优化")],-1),t=(0,e.Wm)("h2",{id:"使用包分析工具",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#使用包分析工具","aria-hidden":"true"},"#"),(0,e.Uk)(" 使用包分析工具")],-1),c=(0,e.Uk)("基于 "),l={href:"https://www.npmjs.com/package/webpack-bundle-analyzer",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("webpack-bundle-analyzer"),i=(0,e.Uk)("，可以通过以下命令对打包后的文件进行分析："),r=(0,e.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm run analyzer\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>指令执行成功后会占用 8888 端口生成一个分析结果的网页，请注意是否被占用。</p></blockquote><h2 id="moment" tabindex="-1"><a class="header-anchor" href="#moment" aria-hidden="true">#</a> moment</h2><p>moment 是 ant-design-vue 中有强依赖该插件，所以使用 webpack 插件减小打包体积，这里我们只保留 zh-cn 语言包：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  config\n    <span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">&#39;ContextReplacementPlugin&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>webpack<span class="token punctuation">.</span>ContextReplacementPlugin<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">moment[/\\\\]locale$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">zh-cn</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>此操作大约可以减小打包后体积 200Kb 左右。</p><h2 id="ant-design-icons" tabindex="-1"><a class="header-anchor" href="#ant-design-icons" aria-hidden="true">#</a> @ant-design/icons</h2><blockquote><p>目前官方并没有提供解决图标按需加载的功能。</p></blockquote><p>在 webpack 中配置：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>configureWebpack<span class="token operator">:</span> <span class="token punctuation">{</span>\n  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>\n    alias<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&#39;@ant-design/icons/lib/dist$&#39;</span><span class="token operator">:</span>\n        path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src/assets/icons.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>@assets/icons.js 文件中按需加载组件库所需要的图标：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token punctuation">{</span>\n  <span class="token keyword">default</span> <span class="token keyword">as</span> LoadingOutline\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/icons/lib/outline/LoadingOutline&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>此操作大约可以减少打包后体积 500Kb 左右。</p><h2 id="gzip" tabindex="-1"><a class="header-anchor" href="#gzip" aria-hidden="true">#</a> gzip</h2><p>默认已经开启 gzip 打包：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  config\n    <span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">&#39;CompressionPlugin&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>CompressionPlugin<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>开启 gzip 大约可以将体积压缩到 1/3 左右。</p><h2 id="路由懒加载" tabindex="-1"><a class="header-anchor" href="#路由懒加载" aria-hidden="true">#</a> 路由懒加载</h2><p>当打包构建应用时，Javascript 包会变得非常大，影响页面加载速度。如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更加高效了。</p>',19),u=(0,e.Uk)("结合 Vue 的"),k={href:"https://cn.vuejs.org/v2/guide/components-dynamic-async.html#%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("异步组件"),m=(0,e.Uk)("和 Webpack 的"),b={href:"https://www.webpackjs.com/guides/code-splitting/",target:"_blank",rel:"noopener noreferrer"},g=(0,e.Uk)("代码分割"),h=(0,e.Uk)("功能，轻松实现路由组件的懒加载。如："),v=(0,e.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span>\n    <span class="token comment">/* webpackChunkName: &quot;home&quot; */</span> <span class="token string">&#39;@/views/home/index.vue&#39;</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">webpack 注释</p><p>/* webpackChunkName: &quot;home&quot; */ 增加此条注释，在打包时，切片的文件名前会加上此项的 name，便于区分打包后页面对应的文件。</p></div><h2 id="preload" tabindex="-1"><a class="header-anchor" href="#preload" aria-hidden="true">#</a> Preload</h2><p><code>&lt;link rel=&quot;preload&quot;&gt;</code> 是一种 resource hint，用来指定页面加载后很快会被用到的资源，所以在页面加载的过程中，我们希望在浏览器开始主体渲染之前尽早 preload。</p><p>默认情况下，一个 Vue CLI 应用会为所有初始化渲染需要的文件自动生成 preload 提示。</p>',5),f=(0,e.Uk)("这些提示会被 "),x={href:"https://github.com/vuejs/preload-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Uk)("@vue/preload-webpack-plugin"),w=(0,e.Uk)(" 注入，并且可以通过 chainWebpack 的 config.plugin('preload') 进行修改和删除。"),j=(0,e.Wm)("h2",{id:"prefetch",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#prefetch","aria-hidden":"true"},"#"),(0,e.Uk)(" Prefetch")],-1),U=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,'<link rel="prefetch">'),(0,e.Uk)(" 是一种 resource hint，用来告诉浏览器在页面加载完成后，利用空闲时间提前获取用户未来可能会访问的内容。")],-1),z=(0,e.Wm)("p",null,"默认情况下，一个 Vue CLI 应用会为所有作为 async chunk 生成的 JavaScript 文件 (通过动态 import() 按需 code splitting 的产物) 自动生成 prefetch 提示。",-1),y=(0,e.Uk)("这些提示会被 "),C={href:"https://github.com/vuejs/preload-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},q=(0,e.Uk)("@vue/preload-webpack-plugin"),B=(0,e.Uk)(" 注入，并且可以通过 chainWebpack 的 config.plugin('prefetch') 进行修改和删除。");var P={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,t,(0,e.Wm)("p",null,[c,(0,e.Wm)("a",l,[o,(0,e.Wm)(s)]),i]),r,(0,e.Wm)("p",null,[u,(0,e.Wm)("a",k,[d,(0,e.Wm)(s)]),m,(0,e.Wm)("a",b,[g,(0,e.Wm)(s)]),h]),v,(0,e.Wm)("p",null,[f,(0,e.Wm)("a",x,[W,(0,e.Wm)(s)]),w]),j,U,z,(0,e.Wm)("p",null,[y,(0,e.Wm)("a",C,[q,(0,e.Wm)(s)]),B])],64)}}}}]);