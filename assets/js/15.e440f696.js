(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{366:function(t,a,s){"use strict";s.r(a);var e=s(26),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"异步请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步请求"}},[t._v("#")]),t._v(" 异步请求")]),t._v(" "),s("h2",{attrs:{id:"接口定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口定义"}},[t._v("#")]),t._v(" 接口定义")]),t._v(" "),s("ul",[s("li",[t._v("所有的接口应定义在 "),s("code",[t._v("@/api")]),t._v(" 文件夹内。")])]),t._v(" "),s("h2",{attrs:{id:"使用封装的-request-js-发送请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用封装的-request-js-发送请求"}},[t._v("#")]),t._v(" 使用封装的 request.js 发送请求")]),t._v(" "),s("p",[t._v("@/libs/request.js 是基于 "),s("a",{attrs:{href:"https://www.kancloud.cn/yunye/axios/234845",target:"_blank",rel:"noopener noreferrer"}},[t._v("axios"),s("OutboundLink")],1),t._v(" 的封装，便于统一处理 POST，GET 等请求参数，请求头，以及错误提示信息等。具体可以参看 request.js。 它封装了全局 request 拦截器、response 拦截器、统一的错误处理、baseURL 设置等。")]),t._v(" "),s("h2",{attrs:{id:"配置接口地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置接口地址"}},[t._v("#")]),t._v(" 配置接口地址")]),t._v(" "),s("p",[t._v("默认的请求地址在 .env")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("VUE_APP_API=/api/\n")])])]),s("h3",{attrs:{id:"环境区分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境区分"}},[t._v("#")]),t._v(" 环境区分")]),t._v(" "),s("p",[t._v("如果希望不同的环境使用不同的请求地址，可以在 .env.development 或 .env.production 中添加设置：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("VUE_APP_API=/api-dev/\n")])])]),s("h2",{attrs:{id:"响应拦截"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应拦截"}},[t._v("#")]),t._v(" 响应拦截")]),t._v(" "),s("p",[t._v("在 @/libs/request.js 中定义响应拦截。")]),t._v(" "),s("h3",{attrs:{id:"默认约定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认约定"}},[t._v("#")]),t._v(" 默认约定")]),t._v(" "),s("p",[t._v("默认设置下 response.data 的数据格式应为如下所示：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接口约定的状态码 非 http 状态码")]),t._v("\n  code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接口返回请求状态信息")]),t._v("\n  msg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'返回信息'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data 内才是真正的返回数据")]),t._v("\n  data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在响应拦截器中会对 http 状态码以及 response.data.code 进行判断，如果全部为正常将会返回 response.data.data，如果有错误将会触发日志记录和信息显示，如果是登录状态失效将自动清空本地的登录状态并退回到登录页面。所有的判断逻辑根据实际业务需要自行修改。")])])}),[],!1,null,null,null);a.default=r.exports}}]);