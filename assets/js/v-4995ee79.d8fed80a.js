(self.webpackChunk=self.webpackChunk||[]).push([[33],{32577:function(n,s,a){"use strict";a.r(s),a.d(s,{data:function(){return t}});const t={key:"v-4995ee79",path:"/Guide/Basics/Chart.html",title:"图表",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"按需加载",slug:"按需加载",children:[]},{level:2,title:"初始化",slug:"初始化",children:[]},{level:2,title:"更新数据",slug:"更新数据",children:[]},{level:2,title:"图表自适应",slug:"图表自适应",children:[]},{level:2,title:"社区 Demo",slug:"社区-demo",children:[]}],filePathRelative:"Guide/Basics/Chart.md",git:{updatedTime:1624865896e3,contributors:[]}}},7909:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return r}});var t=a(66252);const p=(0,t.uE)('<h1 id="图表" tabindex="-1"><a class="header-anchor" href="#图表" aria-hidden="true">#</a> 图表</h1><p>图表默认安装了 ECharts。</p><h2 id="按需加载" tabindex="-1"><a class="header-anchor" href="#按需加载" aria-hidden="true">#</a> 按需加载</h2><p>ECharts 支持 webpack 引入，全部引入体积很大，必须按照功能按需引入：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 按需引入 引入 ECharts 主模块</span>\n<span class="token keyword">var</span> echarts <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;echarts/lib/echarts&#39;</span><span class="token punctuation">)</span>\n<span class="token comment">// 引入柱状图</span>\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;echarts/lib/chart/bar&#39;</span><span class="token punctuation">)</span>\n<span class="token comment">// 引入提示框和标题组件</span>\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;echarts/lib/component/tooltip&#39;</span><span class="token punctuation">)</span>\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;echarts/lib/component/title&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',5),e={href:"https://echarts.apache.org/zh/tutorial.html#%E5%9C%A8%20webpack%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20ECharts",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("webpack 中使用 ECharts 文档"),o=(0,t.uE)('<h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h2><p>ECharts 初始化必须绑定 dom，所以我们只能在 vue 的 mounted 生命周期里进行初始化。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initCharts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\nmethods<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function">initCharts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>chart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据" aria-hidden="true">#</a> 更新数据</h2><p>通过 watch 来触发 setOptions 方法</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//第一种 watch options变化 利用vue的深度 watcher，options 一有变化就重新setOption</span>\nwatch<span class="token operator">:</span> <span class="token punctuation">{</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>chart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    deep<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//第二种 只watch 数据的变化 只有数据变化时触发ECharts</span>\nwatch<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function">seriesData</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>series<span class="token operator">:</span>val<span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="图表自适应" tabindex="-1"><a class="header-anchor" href="#图表自适应" aria-hidden="true">#</a> 图表自适应</h2><p>ECharts 本身并不是自适应的，当你父级容器的宽度发生变化的时候需要手动调用它的 .resize() 方法。 所有比如 el-tab，你可以监听 change 事件，当变化时找到这个图表之后调用它的 .resize() 方法。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>Chart<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="社区-demo" tabindex="-1"><a class="header-anchor" href="#社区-demo" aria-hidden="true">#</a> 社区 Demo</h2>',10),l={href:"https://gallery.echartsjs.com/explore.html",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("gallery"),i=(0,t.Uk)("。");var r={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("p",null,[(0,t.Wm)("a",e,[c,(0,t.Wm)(a)])]),o,(0,t.Wm)("p",null,[(0,t.Wm)("a",l,[u,(0,t.Wm)(a)]),i])],64)}}}}]);